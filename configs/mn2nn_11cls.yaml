dataset:
  train:
    # name: modelnet
    # args:
    #   root: modelnet40_manually_aligned
    #   class_map: modelnet11
    #   split: train
    # transform:
    #   - name: aug
    #     args:
    #       apply_scale: true
    #       apply_rotation: true # y-axis random rotation
  #    - name: rotate
  #      args: 
  #        angle_deg: 30
  
    name: scanobjectnn
    args:
      root: main_split_nobg
      class_map: scanobjectnn11
      split: train
      normalize: true
    transform:
      - name: aug
        args:
          apply_scale: true
          apply_rotation: true # y-axis random rotation

  test:
    name: scanobjectnn
    args:
      root: main_split_nobg
      class_map: scanobjectnn11
      split: test
      normalize: true
  #  transform: # used for voting
  #    - name: rotate
  #      args: 
  #        angle_deg: 30
         

encoder: 
  # name: pointnetlite_encoder
  # args: {}

  # name: pointnet_encoder
  # args:
  #   feature_transform: true

  # name: pointnet2_encoder
  # args:
  #   use_msg: false

  # name: dgcnn_encoder
  # args: {}

  name: pointpn_encoder
  args: {}


head: 
  name: pointnet_cls_head
  args:
    out_dim: 11
    # dropout: [0, 0.4]   # for pointnetlite/pointnet
    # dropout: 0.4   # for pointnet2 ssg
    # dropout: [0.4, 0.5]   # for pointnet2 msg
    
    embed_dim: 288   # for pointpn
    dropout: 0.5   # for pointpn

  # name: dgcnn_cls_head
  # args:
  #   out_dim: 11


loss: cross_entropy   # cross_entropy, pointnet_loss, dgcnn_loss


epochs: 200
batch_size: 32
ddp: false

